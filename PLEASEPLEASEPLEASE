#include <AFMotor.h>
#include <Wire.h>
#include <Adafruit_TCS34725.h>

#define trigPin 13 // Define pin for trigger
#define echoPin 12 // Define pin for echo

// Define SDA and SCL pins
#define SDA_PIN A8
#define SCL_PIN A9

// Create motor objects for the first L298N motor driver
AF_DCMotor motor1(1);
AF_DCMotor motor2(2);
AF_DCMotor motor3(3);
AF_DCMotor motor4(4);

// Create motor objects for the second L298N motor driver
AF_DCMotor motor5(1);
AF_DCMotor motor6(2);

// Initialize the color sensor
Adafruit_TCS34725 tcs = Adafruit_TCS34725(TCS34725_INTEGRATIONTIME_50MS, TCS34725_GAIN_4X);

void setup() {
  // Set motor speed for the first motor driver
  motor1.setSpeed(255);
  motor2.setSpeed(255);
  motor3.setSpeed(255);
  motor4.setSpeed(255);

  // Set motor speed for the second motor driver
  motor5.setSpeed(255);
  motor6.setSpeed(255);
  
  // Set up ultrasonic sensor pins
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  
  // Initialize serial communication
  Serial.begin(9600);

  // Initialize the color sensor
  if (tcs.begin()) {
    Serial.println("Color Sensor Found");
  } else {
    Serial.println("Color Sensor Not Found");
  }
}

void loop() {
  // Move motors forward for 5 seconds
  motor1.run(FORWARD);
  motor2.run(FORWARD);
  motor3.run(FORWARD);
  motor4.run(FORWARD);
  motor5.run(FORWARD);
  motor6.run(FORWARD);
  
  delay(5000); // Move forward for 5 seconds
  
  // Check for obstacles
  if (checkObstacle()) {
    stopMotors();
    return; // Exit loop
  }
  
  // Check for colors
  checkColors();
  
  // Stop motors
  stopMotors();
  
  delay(1000); // Wait for 1 second
  
  // Move left motors forward, right motors backward for 90-degree turn
  motor1.run(FORWARD);
  motor2.run(BACKWARD);
  motor3.run(BACKWARD);
  motor4.run(FORWARD);
 
  
  delay(3000); // Move for 3 seconds 
  
  // Check for obstacles
  if (checkObstacle()) {
    stopMotors();
    return; // Exit loop
  }
  
  // Check for colors
  checkColors();
  
  // Stop motors
  stopMotors();
  
  delay(1000); // Wait for 1 second
}

bool checkObstacle() {
  long duration, distance;
  
  // Clear trigger pin
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  
  // Send ultrasonic signal
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  
  // Measure echo duration
  duration = pulseIn(echoPin, HIGH);
  
  // Calculate distance
  distance = duration * 0.034 / 2; // Speed of sound is 0.034 cm/Âµs
  
  // Print distance to serial monitor
  Serial.print("Distance: ");
  Serial.println(distance);
  
  // Check if distance is less than a threshold (adjust as needed)
  if (distance < 20) { // If an obstacle is detected within 20 cm
    return true;
  } else {
    return false;
  }
}

void checkColors() {
  uint16_t clear, red, green, blue;
  tcs.getRawData(&red, &green, &blue, &clear);
  
  // Print color values to serial monitor
  Serial.print("Red: "); Serial.print(red);
  Serial.print(" Green: "); Serial.print(green);
  Serial.print(" Blue: "); Serial.print(blue);
  Serial.print(" Clear: "); Serial.println(clear);
  
  // Check for specific color conditions
  if (red > 200 && green < 100 && blue < 100) {
    // If red color is detected
    Serial.println("Red detected");
    // Activate motor2 of the second motor driver
    motor5.run(FORWARD);
  } else if (red < 100 && green < 100 && blue < 100) {
    // If black color is detected
    Serial.println("Black detected");
    // Activate motor1 of the first motor driver
    motor6.run(FORWARD);
  } else if (red > 200 && green > 200 && blue > 200) {
    // If white color is detected
    Serial.println("White detected");
    // No specific action for white color
  }
}

void stopMotors() {
  // Stop all motors
  motor1.run(RELEASE);
  motor2.run(RELEASE);
  motor3.run(RELEASE);
  motor4.run(RELEASE);
  motor5.run(RELEASE);
  motor6.run(RELEASE);
}
